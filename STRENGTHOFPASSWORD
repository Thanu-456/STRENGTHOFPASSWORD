<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Password Strength Checker</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .container {
            background: white;
            padding: 40px;
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            max-width: 500px;
            width: 100%;
            backdrop-filter: blur(10px);
        }

        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
            font-size: 2.2em;
            font-weight: 600;
        }

        .input-group {
            margin-bottom: 25px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            color: #555;
            font-weight: 500;
            font-size: 1.1em;
        }

        input[type="password"] {
            width: 100%;
            padding: 15px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            font-size: 16px;
            transition: all 0.3s ease;
            outline: none;
        }

        input[type="password"]:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .strength-indicator {
            margin-top: 15px;
            padding: 15px;
            border-radius: 10px;
            text-align: center;
            font-weight: 600;
            font-size: 1.2em;
            transition: all 0.3s ease;
            min-height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .strength-very-strong {
            background: linear-gradient(135deg, #4CAF50, #45a049);
            color: white;
        }

        .strength-strong {
            background: linear-gradient(135deg, #8BC34A, #689F38);
            color: white;
        }

        .strength-moderate {
            background: linear-gradient(135deg, #FF9800, #F57C00);
            color: white;
        }

        .strength-weak {
            background: linear-gradient(135deg, #f44336, #d32f2f);
            color: white;
        }

        .strength-default {
            background: #f5f5f5;
            color: #666;
            border: 2px dashed #ddd;
        }

        .feedback {
            margin-top: 20px;
        }

        .feedback h3 {
            color: #333;
            margin-bottom: 15px;
            font-size: 1.3em;
        }

        .feedback ul {
            list-style: none;
            padding: 0;
        }

        .feedback li {
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            padding: 10px 15px;
            margin-bottom: 8px;
            border-radius: 8px;
            color: #856404;
            font-size: 0.95em;
            display: flex;
            align-items: center;
        }

        .feedback li:before {
            content: "‚ö†Ô∏è";
            margin-right: 10px;
        }

        .criteria-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 8px;
            margin-top: 20px;
        }

        .criteria-item {
            display: flex;
            align-items: center;
            padding: 8px 12px;
            border-radius: 6px;
            font-size: 0.9em;
            transition: all 0.3s ease;
        }

        .criteria-met {
            background: #e8f5e8;
            color: #2e7d32;
            border-left: 4px solid #4caf50;
        }

        .criteria-not-met {
            background: #ffebee;
            color: #c62828;
            border-left: 4px solid #f44336;
        }

        .criteria-item:before {
            margin-right: 10px;
            font-weight: bold;
        }

        .criteria-met:before {
            content: "‚úì";
            color: #4caf50;
        }

        .criteria-not-met:before {
            content: "‚úó";
            color: #f44336;
        }

        .toggle-password {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
            font-size: 18px;
            color: #666;
            padding: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            transition: background-color 0.3s ease;
        }

        .toggle-password:hover {
            background-color: #f0f0f0;
        }

        .input-wrapper {
            position: relative;
        }

        @media (max-width: 600px) {
            .container {
                padding: 20px;
                margin: 10px;
            }
            
            h1 {
                font-size: 1.8em;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Password Strength Checker</h1>
        
        <div class="input-group">
            <label for="password">Enter your password:</label>
            <div class="input-wrapper">
                <input type="password" id="password" placeholder="Type your password here...">
                <button type="button" class="toggle-password" onclick="togglePassword()">üëÅÔ∏è</button>
            </div>
        </div>
        
        <div class="strength-indicator strength-default" id="strengthResult">
            Enter a password to check its strength
        </div>
        
        <div class="criteria-grid" id="criteriaGrid">
            <div class="criteria-item criteria-not-met">At least 8 characters long</div>
            <div class="criteria-item criteria-not-met">Contains lowercase letters</div>
            <div class="criteria-item criteria-not-met">Contains uppercase letters</div>
            <div class="criteria-item criteria-not-met">Contains digits (0-9)</div>
            <div class="criteria-item criteria-not-met">Contains special characters</div>
        </div>
        
        <div class="feedback" id="feedback" style="display: none;">
            <h3>Suggestions to improve:</h3>
            <ul id="feedbackList"></ul>
        </div>
    </div>

    <script>
        function checkPasswordStrength(password) {
            let strength = 0;
            let feedback = [];
            let criteria = [];
            
            // Criteria 1: Length
            if (password.length >= 8) {
                strength += 1;
                criteria.push(true);
            } else {
                feedback.push("Password should be at least 8 characters long.");
                criteria.push(false);
            }
            
            // Criteria 2: Lowercase
            if (/[a-z]/.test(password)) {
                strength += 1;
                criteria.push(true);
            } else {
                feedback.push("Include at least one lowercase letter.");
                criteria.push(false);
            }
            
            // Criteria 3: Uppercase
            if (/[A-Z]/.test(password)) {
                strength += 1;
                criteria.push(true);
            } else {
                feedback.push("Include at least one uppercase letter.");
                criteria.push(false);
            }
            
            // Criteria 4: Digit
            if (/[0-9]/.test(password)) {
                strength += 1;
                criteria.push(true);
            } else {
                feedback.push("Include at least one digit.");
                criteria.push(false);
            }
            
            // Criteria 5: Special character
            if (/[!@#$%^&*(),.?":{}|<>]/.test(password)) {
                strength += 1;
                criteria.push(true);
            } else {
                feedback.push("Include at least one special character (e.g., !, @, #, etc.).");
                criteria.push(false);
            }
            
            // Strength rating
            let result;
            if (strength === 5) {
                result = "Very Strong ";
            } else if (strength >= 4) {
                result = "Strong ";
            } else if (strength >= 3) {
                result = "Moderate ";
            } else {
                result = "Weak";
            }
            
            return { result, feedback, criteria, strength };
        }
        
        function updateStrengthDisplay(password) {
            const strengthResult = document.getElementById('strengthResult');
            const feedbackDiv = document.getElementById('feedback');
            const feedbackList = document.getElementById('feedbackList');
            const criteriaGrid = document.getElementById('criteriaGrid');
            
            if (password === '') {
                strengthResult.textContent = 'Enter a password to check its strength';
                strengthResult.className = 'strength-indicator strength-default';
                feedbackDiv.style.display = 'none';
                
                // Reset all criteria to not met
                const criteriaItems = criteriaGrid.querySelectorAll('.criteria-item');
                criteriaItems.forEach(item => {
                    item.className = 'criteria-item criteria-not-met';
                });
                return;
            }
            
            const { result, feedback, criteria, strength } = checkPasswordStrength(password);
            
            // Update strength indicator
            strengthResult.textContent = result;
            strengthResult.className = 'strength-indicator';
            
            if (strength === 5) {
                strengthResult.classList.add('strength-very-strong');
            } else if (strength >= 4) {
                strengthResult.classList.add('strength-strong');
            } else if (strength >= 3) {
                strengthResult.classList.add('strength-moderate');
            } else {
                strengthResult.classList.add('strength-weak');
            }
            
            // Update criteria display
            const criteriaItems = criteriaGrid.querySelectorAll('.criteria-item');
            criteriaItems.forEach((item, index) => {
                if (criteria[index]) {
                    item.className = 'criteria-item criteria-met';
                } else {
                    item.className = 'criteria-item criteria-not-met';
                }
            });
            
            // Update feedback
            if (feedback.length > 0) {
                feedbackDiv.style.display = 'block';
                feedbackList.innerHTML = '';
                feedback.forEach(tip => {
                    const li = document.createElement('li');
                    li.textContent = tip;
                    feedbackList.appendChild(li);
                });
            } else {
                feedbackDiv.style.display = 'none';
            }
        }
        
        function togglePassword() {
            const passwordInput = document.getElementById('password');
            const toggleButton = document.querySelector('.toggle-password');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleButton.textContent = 'üôà';
            } else {
                passwordInput.type = 'password';
                toggleButton.textContent = 'üëÅÔ∏è';
            }
        }
        
        // Add event listener for real-time checking
        document.getElementById('password').addEventListener('input', function() {
            updateStrengthDisplay(this.value);
        });
        
        // Initialize display
        updateStrengthDisplay('');
    </script>
</body>
</html>
